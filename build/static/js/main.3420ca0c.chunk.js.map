{"version":3,"sources":["assets/images/illustration.svg","assets/images/logo.svg","components/Button.tsx","services/firebase.ts","context/AuthContext.tsx","hooks/useAuth.ts","pages/NewRoom.tsx","assets/images/google-icon.svg","pages/Home.tsx","assets/images/copy.svg","components/RoomCode.tsx","pages/Room.tsx","App.tsx","index.tsx"],"names":["Button","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","NewRoom","history","useHistory","newRoom","setNewRoom","event","preventDefault","trim","roomRef","ref","push","title","authorId","firebaseRoom","key","src","illustrationImg","alt","logoImg","onSubmit","type","placeholder","onChange","target","to","Home","roomCode","setRoomCode","get","exists","alert","onClick","googleIconImg","RoomCode","navigator","clipboard","writeText","code","copyImg","Room","params","useParams","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3420ca0c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","import { ButtonHTMLAttributes } from \"react\";\n\nimport '../styles/button.scss';\n\ntype ButtonProps = ButtonHTMLAttributes <HTMLButtonElement>;\n\nexport function Button(props:ButtonProps ) {\n    return (\n        <button className=\"button\" {...props}/>\n    )\n}","import firebase from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst database = firebase.database();\n\nexport { firebase, auth, database};","import { createContext, ReactNode, useEffect, useState } from 'react';\nimport { auth, firebase } from '../services/firebase';\n\ntype User = {\n    id: string;\n    name: string;\n    avatar: string;\n  }\n\n\ntype AuthContextType = {\nuser: User | undefined;\nsignInWithGoogle: () => Promise<void>;\n}\n\ntype AuthContextProviderProps = {\n    children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nexport function AuthContextProvider(props: AuthContextProviderProps ) {\n \n\n  const [user, setUser] = useState<User>()\n\n  useEffect(()=>{\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if(user) {\n        const {displayName, photoURL, uid } = user\n\n        if(!displayName || !photoURL) {\n          throw new Error('Missing information from Google Account');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })        \n      }\n    })\n\n    return () => {\n      unsubscribe();\n    }\n  },[])\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider);\n        \n    if(result.user) {\n      const {displayName, photoURL, uid } = result.user;\n\n      if(!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      })\n    }\n  }\n\n\n    return(\n      <AuthContext.Provider value={{user, signInWithGoogle}} >\n          {props.children}\n      </AuthContext.Provider>\n    )\n}","import { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nexport function useAuth() {\n    const value = useContext(AuthContext)\n\n    return value;\n}","import { FormEvent, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport illustrationImg from '../assets/images/illustration.svg';\nimport logoImg from '../assets/images/logo.svg';\n\nimport { Button } from '../components/Button';\nimport { database } from '../services/firebase';\nimport { useAuth } from '../hooks/useAuth';\n\nimport '../styles/auth.scss'\n\nexport function NewRoom() {\n    const history = useHistory();\n    const { user } = useAuth();\n\n    const [newRoom, setNewRoom] = useState('');\n\n    async function handleCreateRoom(event: FormEvent) {\n        event.preventDefault();\n\n        if (newRoom.trim() === ''){ //trim() remove os espaços em branco de uma string\n            return;\n        }\n\n        const roomRef = database.ref('rooms');\n        const firebaseRoom = await roomRef.push({\n            title: newRoom,\n            authorId: user?.id,\n        })\n\n        history.push(`/rooms/${firebaseRoom.key}`)\n    }\n    return (\n        <div id=\"page-auth\">\n \n            <aside>\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\"/>\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\n                <p>Tire as dúvidas da sua audiencia em tempo-real</p>\n            </aside>\n\n            <main>\n                <div className=\"main-content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <h2>Criar uma nova sala</h2>\n                    <form onSubmit={handleCreateRoom}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Nome da sala\"\n                            onChange={event => setNewRoom(event.target.value)}\n                            value={newRoom}\n                        />\n                        <Button type=\"submit\">\n                            Criar sala\n                        </Button>\n                    </form>\n                    <p>Quer entrar em uma sala existente? <Link to=\"/\">Clique aqui</Link></p>\n\n                </div>\n            </main>\n\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import { useHistory } from 'react-router';\n\nimport illustrationImg from '../assets/images/illustration.svg';\nimport logoImg from '../assets/images/logo.svg';\nimport googleIconImg from '../assets/images/google-icon.svg';\nimport '../styles/auth.scss'\n\nimport { Button } from '../components/Button';\nimport { useAuth } from '../hooks/useAuth';\nimport { FormEvent, useState } from 'react';\nimport { database } from '../services/firebase';\n\nexport function Home() {\n    const history = useHistory();\n    const { user, signInWithGoogle } = useAuth();\n    const [roomCode, setRoomCode] = useState('')\n    \n\n    async function handleCreateRoom() {\n        if(!user) {\n            await signInWithGoogle();\n        }\n        history.push('/rooms/new')\n    }\n\n    async function handleJoinRoom(event: FormEvent) {\n        event.preventDefault();\n\n        if(roomCode.trim() === '') {\n            return;\n        }\n\n        const roomRef = await database.ref(`rooms/${roomCode}`).get()\n\n        if(!roomRef.exists()) {\n            alert('Room does not exists.')\n            return;\n        }\n\n        history.push(`/rooms/${roomCode}`)\n\n    }\n\n\n    return (\n        <div id=\"page-auth\">\n            <aside>\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\"/>\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\n                <p>Tire as dúvidas da sua audiencia em tempo-real</p>\n            </aside>\n\n            <main>\n                <div className=\"main-content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <button onClick={handleCreateRoom} className=\"create-room\">\n                        <img src={googleIconImg} alt=\"Logo do Google\" />\n                        Crie sua sala com o Google\n                    </button>\n                    <div className=\"separator\">ou entre em uma sala</div>\n                    <form onSubmit={handleJoinRoom}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Digite o código da sala\"\n                            onChange={event => setRoomCode(event.target.value)}\n                            value={roomCode}\n                        />\n                        <Button type=\"submit\">\n                            Entrar na sala\n                        </Button>\n\n                    </form>\n\n                </div>\n            </main>\n\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import '../styles/roomCode.scss'\nimport copyImg from '../assets/images/copy.svg';\n\n\n\ntype RoomCodeProps = {\n    code: string;\n}\n\nexport function RoomCode(props: RoomCodeProps){\n    function copyRoomCodeToClipboard() {\n        navigator.clipboard.writeText(props.code)\n    }\n\n    return (\n        <button className=\"room-code\" onClick={copyRoomCodeToClipboard}>\n            <div>\n                <img src={copyImg} alt=\"Copy room code\" />\n            </div>\n            <span>Sala #{props.code}</span>\n        </button>\n    )\n}","import '../styles/room.scss';\n\nimport { useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg';\n\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\n\ntype RoomParams = {\n    id: string;\n}\n\nexport function Room(){\n    const params = useParams<RoomParams>();\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <RoomCode code={params.id} />\n                </div>\n            </header>\n\n            <main>\n                <div className=\"room-title\">\n                    <h1>Sala React</h1>\n                    <span>4 Perguntas</span>\n                </div>\n\n                <form>\n                    <textarea \n                        placeholder=\"O que você quer perguntar\"\n                    />\n                    \n                    <div className=\"form-footer\">\n                        <span>Para enviar uma pergunta, <button>faça seu loguin</button>.</span>\n                        <Button type=\"submit\">Enviar pergunta</Button>\n                    </div>\n                </form>\n            </main>\n        </div>\n    )\n}","import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { NewRoom } from './pages/NewRoom';\nimport { Home } from './pages/Home';\nimport { Room } from './pages/Room';\n\nimport { AuthContextProvider } from './context/AuthContext';\n\n\nfunction App() {\n  return (  \n    <BrowserRouter>\n      <AuthContextProvider>\n        <Switch>\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/rooms/new\" component={NewRoom} />\n          <Route path=\"/rooms/:id\" component={Room} />\n        </Switch>\n      </AuthContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './services/firebase';\n\nimport './styles/global.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}